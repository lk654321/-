数组：是按次序排列的一组值。编号从0开始 [ ]
1: 循环数组方法 forEach(),与for循环很相似，只是对数组操作
   arr.forEach(function( val,i){ })     跟一个回调函数     val-->值，i-->下标
 添加数组方法：
1、arr. push('a','b' ) 用于数组的末端添加一个或多个数据，返回值，添加的新数组的长度，！改变原数组
2、arr.pop（）用于删除数组最后一个元素，返回值，删除的元素，！改变原数组
3、arr. unshift('a','b' )  用于数组的前端添加一个或多个数据，返回值，添加的新数组的长度，！改变原数组
4、arr.shift（）用于删除数组起始一个元素，返回值，删除的元素，！改变原数组
5、arr.splice() ,可以在任意数组的位置进行，添加 删除 替换 的操作。
                     接受多个参数 ，第一个参数：数组的起始位置  。二个：删除的个数，三个及以上：开始向数组中添加项
                      返回值： 删除的元素数组，  改变原数组
查找数组方法：
1、slice( a ,b)  截取数组，也可以看做 查找数组方法， 第一个参数：数组的起始位置，二个：数组的结束位置（但不包括结束位置）
2、indexOf()  确定一个数组项在当前数组的位置， 会返回一个数字 索引， 如匹配不成功 返回-1  
3、lastindexOf()     和indexOf()    从结束位置 进行匹配
转换数组方法：
1、concat( 变量1，变量2），  连个 组合多个数组，返回一个新数组
2、 join(“-”)  以参数作为 分隔符，  将所有数组成员组成一个字符串 返回，  如果不提供参数，默认逗号分隔
3、map(function( val ,i) ) 方法对数组所有成员依次调用一个函数，根据函数的结果返回一个新数组
筛选数组的方法：  可得到满足条件的数组或布尔值
1、every （function( val ,i)） 对数组的每一项进行条件判断，当所有计算成员的返回值为true时，返回true,否则返回false
2、some (function( val ,i）)   和every 方法相反，当所有计算成员有一个返回值为true时，返回true,否则返回false
3、 filter (function( val ,i）) 对数组的每一项进行条件判断,返回结果为true 的成员组成一个新数组，返回      筛选数组，返回一个新数组
排序数组的方法：
1、reverse()  原数组 颠倒排序
2、sort()排序（字符规则），返回结果但是在排序前，会先调用数组的toString方法，将每个元素都转成字符之后，再进行排序，
此时会按照字符串的排序，逐位比较，进行排序。
  如果 传参数 sort(function( a,b）)    前提a>b        a-b      顺序排列      b-a  倒叙排列
find（funtion( val ) ）和findindex () 查找数组中，第一个满足条件的值，和 索引值
fill()   给一个定值，填充一个数组，
          第一个参数为要填充的元素，第二个为填充的起始位置

 input  的 pettern="正则表达式"

for (变量名  in  数组名)  ，遍历 数组的下标
 for （  of  ）  


